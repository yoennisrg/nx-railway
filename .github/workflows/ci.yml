name: CI

on:
  push:
    branches:
      - main
  pull_request:
    paths:
      - apps/api-proxy/**

permissions:
  actions: read
  contents: read

env:
  WORKSPACE_DIR: ${{ github.workspace }}

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Connect your workspace on nx.app and uncomment this to enable task distribution.
      # The "--stop-agents-after" is optional, but allows idle agents to shut down once the "build" targets have been requested
      # - run: npx nx-cloud start-ci-run --distribute-on="5 linux-medium-js" --stop-agents-after="build"

      # Cache node_modules
      - uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'npm'
      - run: npm ci
      - uses: nrwl/nx-set-shas@v4

      - name: Install Railway
        run: npm i -g @railway/cli
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TEST_TOKEN_PROD }}

      - name: Get affected projects
        id: get-affected-projects
        run: |
          projects=$(npx nx show projects --type app --affected --json)
          echo "Affected projects: $projects"
          echo "::set-output name=projects::$projects"
      
      - name: Deploy affected projects
        run: |
          affected_projects="${{ steps.get-affected-projects.outputs.projects }}"
          IFS=',' read -ra projects_array <<< "$affected_projects"
          for project in "${projects_array[@]}"; do
            project_name=$(echo "$project" | tr -d '[]')
            project_path=${{ env.WORKSPACE_DIR }}/dist/apps/$project_name
            npx nx run $project_name:test
            npx nx run $project_name:lint
            npx nx build $project_name:production
            cp Dockerfile project_path
            cd $project_path
            ls
            cd ${{ env.WORKSPACE_DIR }}
            echo "Deploying $project_name"

            done
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TEST_TOKEN_PROD }}
